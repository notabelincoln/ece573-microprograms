"TWOP"

;OP_VAL  EQU 0BH
;WAIT    EQU 0FH
        
;        ORG (OP_VAL*16)+1 ; force correct microaddress

UPROG_START
        A_SOURCE=IA, ALU_FUNC=A, ALU_DEST=A, END_S ; move IA to TA

CHECK_CARRY_TA
        MICRO_AD=SHIFT_ONE_TB, A_SOURCE=TA, BOP=C8, ; check TA carry
        CIN=NO, ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=NONE, END_S

        MICRO_AD=SHIFT_ZERO_TB, A_SOURCE=TA, BOP=NOT_C8, ; check TA carry
        CIN=NO, ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=NONE, END_S

SHIFT_ONE_TB
        MICRO_AD=CHECK_TB, BOP=BRA, A_SOURCE=TA, CIN=YES, ; shift left TB
        ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=B, END_S

SHIFT_ZERO_TB
        MICRO_AD=CHECK_TB, BOP=BRA, A_SOURCE=TA, CIN=NO, ; shift left TB
        ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=B, END_S

CHECK_TB
        MICRO_AD=FINALIZE_RESULT, BOP=Z, A_SOURCE=IA, ; check if TB = IA
        B_SOURCE=TB, ALU_FUNC=A_XOR_B, END_S

DOUBLE_TA_STORE_TA
        MICRO_AD=SHIFT_ONE_TA, BOP=C8, A_SOURCE=TA, CIN=NO, ; shift TA w/carry
        ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=NONE, END_S

        MICRO_AD=SHIFT_ZERO_TA, BOP=NOT_C8, A_SOURCE=TA, CIN=NO, ; shift TA
        ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=NONE, END_S
        
SHIFT_ONE_TA
        MICRO_AD=CHECK_CARRY_TA, BOP=BRA, A_SOURCE=TA, ; shift, insert 1
        CIN=YES, ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=A, END_S

SHIFT_ZERO_TA
        MICRO_AD=CHECK_CARRY_TA, BOP=BRA, A_SOURCE=TA, ; shift, insert 0
        CIN=NO, ALU_FUNC=A_PLUS_A_PLUS_C, ALU_DEST=A, END_S

FINALIZE_RESULT
        A_SOURCE=TA, ALU_FUNC=A, ALU_DEST=F, END_S ; put result in F

        MICRO_AD=UPROG_START, BOP=BRA, END_S ; go back to the beginning

;END_UPROG
;        COUNT=NO_COUNT, BOP=NOT_GO, MICRO_AD=WAIT, END_S ; finish microroutine
