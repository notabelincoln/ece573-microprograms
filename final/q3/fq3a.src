"THREE"

OP_PUSHA	EQU 07H
OP_POPA		EQU 08H
OP_LDAA		EQU 01H
OP_BRA		EQU 04H

; Reset code taken from figure 6.3a in book

	ORG 0

RESET
	INC_PC=NO_INC, VMA=NO_VMA, BOP=BRA, MICRO_AD=FETCH, END_S

	ORG 0FH

FETCH
	AD_BUS=PC, VMA=VMA, R_W=READ, INC_PC=INC, END_S

DECODE
	OP_CON_CTL=OP_CODE, BOP=BRA, AD_BUS=PC, VMA=VMA, R_W=READ,
	MICRO_AD=1, INC_PC=INC, END_S

;------------------------------------------------------------------------------

; Push A (pusha)
; Taken from figure 6.11 in book

	ORG (OP_PUSHA * 16) + 1

PUSH
	AD_BUS=SP, VMA=VMA, R_W=WRITE, INC_PC=NO_INC, ALU_SOURCE=ACC,
	ALU_FUNC=A, END_S

	INC_PC=NO_INC, ALU_FUNC=A_MINUS_ONE_PLUS_C, ALU_SOURCE=SPL,
	ALU_DEST=SPL, R_W=WRITE, END_S

	ALU_SOURCE=SPH, ALU_DEST=SPH, ALU_FUNC=A_MINUS_ONE_PLUS_C,
	CIN=MICRO_C, BOP=BRA, VMA=VMA, OP_CON_CTL=OP_CODE, MICRO_AD=DECODE, END_S

;------------------------------------------------------------------------------

; Load A Immediate (ldaa)
; Code taken from figure 6.5 in book

	ORG (OP_LDAA * 16) + 1

LDA_IMM
	ALU_FUNC=B, ALU_DEST=ACC, EN_SR=EN_SR, AD_BUS=PC, R_W=READ, VMA=VMA,
	INC_PC=INC, BOP=BRA, MICRO_AD=DECODE, END_S

;------------------------------------------------------------------------------

; Pop A (popa)
; Code taken from figure 6.12 in book

	ORG (OP_POPA * 16) + 1

POPA
	ALU_SOURCE=SPL, CIN=YES, ALU_FUNC=A_PLUS_C, ALU_DEST=SPL,
	INC_PC=NO_INC, END_S

	ALU_SOURCE=SPH, CIN=MICRO_C, ALU_FUNC=A_PLUS_C, ALU_DEST=SPH,
	INC_PC=NO_INC, END_S

	AD_BUS=SP, VMA=VMA, R_W=READ, INC_PC=NO_INC, END_S

	ALU_FUNC=B, ALU_DEST=ACC, EN_SR=EN_SR, INC_PC=NO_INC, END_S

	INC_PC=NO_INC, ALU_FUNC=A_MINUS_ONE_PLUS_C, ALU_SOURCE=PCL,
	ALU_DEST=PCL, R_W=WRITE, END_S

	ALU_SOURCE=PCH, ALU_DEST=PCH, ALU_FUNC=A_MINUS_ONE_PLUS_C,
	CIN=MICRO_C, R_W=WRITE, BOP=BRA, MICRO_AD=FETCH, END_S

;------------------------------------------------------------------------------

; Branch Relative (bra)
; Code taken from figur 6.8 in book

	ORG (OP_BRA * 16) + 1

BRA_REL
	ALU_FUNC=B, ALU_DEST=MARL, INC_PC=NO_INC, R_W=WRITE, END_S

BRA_REL2
	ALU_SOURCE=MARL, CIN=NO, ALU_FUNC=A_PLUS_A_PLUS_C, INC_PC=NO_INC,
	R_W=WRITE, END_S

	ALU_SOURCE=PCL, CIN=NO, ALU_FUNC=A_PLUS_B_PLUS_C, ALU_DEST=PCL,
	INC_PC=NO_INC, BOP=C_MICRO, MICRO_AD=BRA_BACK, END_S

BRA_FWRD
	ALU_SOURCE=PCH, CIN=MICRO_C, ALU_FUNC=A_PLUS_C, ALU_DEST=PCH, INC_PC=NO_INC,
	BOP=BRA, MICRO_AD=FETCH, END_S

BRA_BACK
	ALU_SOURCE=PCH, CIN=MICRO_C, ALU_FUNC=A_MINUS_ONE_PLUS_C, ALU_DEST=PCH,
	INC_PC=NO_INC, BOP=BRA, MICRO_AD=FETCH, END_S

